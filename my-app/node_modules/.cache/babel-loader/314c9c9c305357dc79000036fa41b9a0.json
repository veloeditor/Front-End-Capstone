{"ast":null,"code":"var _jsxFileName = \"/Users/i9_editor/workspace/capstones/front-end/my-app/src/components/Dashboard.js\";\nimport React, { Component } from 'react';\nimport HikesManager from \"../modules/HikesManager\";\nimport UserManager from \"../modules/UserManager\";\nimport { Progress } from 'reactstrap';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hikes: [],\n      totalMiles: 0,\n      users: [],\n      goalPercentage: 0,\n      goal: 0\n    };\n\n    this.logout = () => {\n      sessionStorage.clear();\n      this.props.history.push(\"/login\");\n    };\n\n    this.userGoalProgress = () => {\n      const username = JSON.parse(sessionStorage.getItem(\"credentials\"));\n      UserManager.get(username.id).then(users => {\n        const percentage = parseInt(this.state.totalMiles / users.goal * 100);\n        console.log(this.state.totalMiles);\n\n        if (percentage > 100) {\n          return alert(\"You bet your goal!  How about setting another?\");\n        }\n\n        this.setState({\n          goalPercentage: percentage\n        });\n        return percentage;\n      });\n    };\n\n    this.totalUserMiles = () => {\n      const username = JSON.parse(sessionStorage.getItem(\"credentials\"));\n      HikesManager.getAll(username.id).then(hikes => {\n        const userHikes = hikes.filter(hike => hike.userId === username.id).reduce((totalMiles, hikes) => totalMiles + hikes.miles, 0);\n        console.log(\"userhikes\", userHikes);\n        this.setState({\n          totalMiles: userHikes\n        });\n        return userHikes;\n      });\n    };\n  }\n\n  componentDidMount() {\n    const username = JSON.parse(sessionStorage.getItem(\"credentials\"));\n    HikesManager.getAll(username.id).then(hikes => this.setState({\n      hikes\n    })).then(() => this.totalUserMiles()).then(() => this.userGoalProgress());\n  }\n\n  render() {\n    const username = JSON.parse(sessionStorage.getItem(\"credentials\"));\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"dashTop_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"welcome_h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Welcome, \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, username.username), \"!\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      outline: true,\n      color: \"secondary\",\n      size: \"sm\",\n      className: \"sign_out\",\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Logout\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"You've hiked \", React.createElement(\"span\", {\n      className: \"userMiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.totalMiles), \" miles so far. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \"You're \", React.createElement(\"span\", {\n      className: \"userPerc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.goalPercentage, \"%\"), \" of your way towards your goal.\"), React.createElement(\"button\", {\n      className: \"goal_change\",\n      onClick: () => {\n        this.props.history.push(\"/goal\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Change your goal\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dash_add_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"add_hike\",\n      onClick: () => {\n        this.props.history.push(\"/hikes/new\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Log your hike\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dash_log_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-outline-secondary\",\n      className: \"hike_log\",\n      onClick: () => {\n        this.props.history.push(\"/hikes\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"View your hikes\")));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/i9_editor/workspace/capstones/front-end/my-app/src/components/Dashboard.js"],"names":["React","Component","HikesManager","UserManager","Progress","Dashboard","state","hikes","totalMiles","users","goalPercentage","goal","logout","sessionStorage","clear","props","history","push","userGoalProgress","username","JSON","parse","getItem","get","id","then","percentage","parseInt","console","log","alert","setState","totalUserMiles","getAll","userHikes","filter","hike","userId","reduce","miles","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport HikesManager from \"../modules/HikesManager\"\nimport UserManager from \"../modules/UserManager\"\nimport { Progress } from 'reactstrap';\n\n\n\nclass Dashboard extends Component {\n  \n  state = {\n    hikes: [],\n    totalMiles: 0,\n    users: [],\n    goalPercentage: 0,\n    goal: 0,\n}\n\n  logout = () => {\n    sessionStorage.clear()\n    this.props.history.push(\"/login\")\n    }\n\n    userGoalProgress = () => {\n      const username = (JSON.parse(sessionStorage.getItem(\"credentials\")))\n      UserManager.get(username.id)\n        .then((users) => {\n          const percentage = parseInt(this.state.totalMiles / users.goal * 100)\n          console.log(this.state.totalMiles)\n          if (percentage > 100) {\n            return alert(\"You bet your goal!  How about setting another?\")\n          }\n          this.setState({goalPercentage: percentage})\n          return percentage\n        })\n    }\n\n    totalUserMiles = () => {\n      const username = (JSON.parse(sessionStorage.getItem(\"credentials\")))\n      HikesManager.getAll(username.id)\n        .then((hikes) => {\n          const userHikes = hikes.filter(hike => hike.userId === username.id).reduce((totalMiles, hikes) => totalMiles + hikes.miles, 0)\n          console.log(\"userhikes\", userHikes)\n          this.setState({totalMiles: userHikes}) \n          return userHikes\n        })\n    }\n\n    componentDidMount(){\n      const username = (JSON.parse(sessionStorage.getItem(\"credentials\")))\n      HikesManager.getAll(username.id)\n      .then((hikes) => this.setState({hikes}))\n      .then(() => this.totalUserMiles())\n      .then(() => this.userGoalProgress())\n  }\n\n  \n\n  render() {\n    const username = (JSON.parse(sessionStorage.getItem(\"credentials\")))\n\n\n    return (\n      <>\n      <div className=\"dashTop_container\">\n        <br></br>\n        <h3 className=\"welcome_h3\">Welcome, <span>{username.username}</span>!</h3>\n        <div> <button outline color=\"secondary\" size=\"sm\" className=\"sign_out\" onClick={this.logout}>Logout</button></div> \n        <p>You've hiked <span className=\"userMiles\">{this.state.totalMiles}</span> miles so far. <br></br>\n        You're <span className=\"userPerc\">{this.state.goalPercentage}%</span> of your way towards your goal.</p>\n        <button className=\"goal_change\" onClick={() => {this.props.history.push(\"/goal\")}}>Change your goal</button>\n      </div>\n      \n      <br></br>\n      <div className=\"dash_add_container\">\n        \n        <button className=\"add_hike\" onClick={() => {this.props.history.push(\"/hikes/new\")}}>Log your hike</button>\n      </div>\n      <br></br>\n      <div className=\"dash_log_container\">\n        \n      <button type=\"button\" class=\"btn btn-outline-secondary\" className=\"hike_log\" onClick={() => {this.props.history.push(\"/hikes\")}}>View your hikes</button>\n      </div>\n      \n      </>\n    )\n  }\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}